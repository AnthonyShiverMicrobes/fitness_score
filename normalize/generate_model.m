function model=generate_model(x,y,poly)
%-----------------------------------------!
% model=generate_model(x,y,poly)          :
%-----------------------------------------!
% generate_model.m returns a model of     :
% polynomial type 'poly' that describes   :
% a two-dimensional polynomial whose x-y  :
% values are column and row (respectively):
%-----------------------------------------!
% Possible values of 'poly':              :
% 'linear': Power of 1 (3 terms)          :
% 'quadratic': Power of 2 (6 terms)       :
% 'cubic': Power of 3 (10 terms)          :
% 'quartic': Power of 4  (15 terms)       :
%-----------------------------------------!
% Anthony Shiver (2013)                   :
%-----------------------------------------!
x=double(x); %force double precision numbers
y=double(y); %because robust_fit needs double.
switch poly
    case 'linear'
        model=  [x,y];
    case 'quadratic'
        model=  [x.^2,x, ...
                y.^2,y, ...
                x.*y];
    case 'cubic'
        model=  [x.^3,x.^2,x, ...
                y.^3,y.^2,y, ...
                (x.^2).*y, ...
                x.*(y.^2), ...
                x.*y];
    case 'quartic'
        model=  [x.^4,x.^3,x.^2,x, ...
                y.^4,y.^3,y.^2,y, ...
                (x.^3).*y, ...
                (x.^2).*(y.^2), ...
                x.*(y.^3), ...
                (x.^2).*y, ...
                x.*(y.^2), ...
                x.*y];
    otherwise
        disp('Valid model polynomial not specified, defaulting to quadratic.');
        model=  [x.^2,x, ...
                y.^2,y, ...
                x.*y];
end
end
